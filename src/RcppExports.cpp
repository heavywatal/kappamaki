// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cpp_blackthunnus
std::vector<std::string> cpp_blackthunnus(const std::vector<std::string>& args);
RcppExport SEXP _tekkamaki_cpp_blackthunnus(SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const std::vector<std::string>& >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_blackthunnus(args));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tekkamaki_cpp_blackthunnus", (DL_FUNC) &_tekkamaki_cpp_blackthunnus, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_tekkamaki(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
