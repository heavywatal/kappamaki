[{"path":"/articles/snp.html","id":"generate-a-snp-matrix","dir":"Articles","previous_headings":"","what":"Generate a SNP matrix","title":"Simulate SNP pattern","text":"","code":"result = tekka(\"--seed 42 -y40 -K100 -r2 -l2 --sa 2,2 --sj 2,2\") samples = result$sample_family[[1L]] make_snp(samples, ss = c(1L, 2L)) #>       [,1] [,2] [,3] #>  [1,]    0    0    0 #>  [2,]    0    0    0 #>  [3,]    0    1    0 #>  [4,]    0    0    0 #>  [5,]    0    0    0 #>  [6,]    0    1    0 #>  [7,]    0    0    0 #>  [8,]    0    1    0 #>  [9,]    0    0    0 #> [10,]    0    0    0 #> [11,]    0    0    0 #> [12,]    0    0    0 #> [13,]    0    0    0 #> [14,]    0    0    0 #> [15,]    0    0    0 #> [16,]    0    0    0 #> [17,]    0    1    0 #> [18,]    0    1    0 #> [19,]    0    0    0 #> [20,]    0    0    0 #> [21,]    0    1    0 #> [22,]    0    0    1 #> [23,]    0    1    0 #> [24,]    0    1    0 #> [25,]    0    1    0 #> [26,]    0    0    0 #> [27,]    0    0    0 #> [28,]    0    0    0 #> [29,]    0    0    0 #> [30,]    0    0    0 #> [31,]    0    0    0 #> [32,]    1    0    0"},{"path":"/articles/snp.html","id":"visualize-a-generated-gene-genealogy","dir":"Articles","previous_headings":"","what":"Visualize a generated gene genealogy","title":"Simulate SNP pattern","text":"","code":"segments = gather_segments(samples) genealogy = make_gene_genealogy(segments) plot(genealogy) +   theme_void() +   theme(legend.position = \"top\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Watal M. Iwasaki. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Iwasaki W (2023). tekkamaki: Individual-based simulator pacific bluefin tuna. R package version 0.7.1.1, https://github.com/heavywatal/tekkamaki.","code":"@Manual{,   title = {tekkamaki: Individual-based simulator of pacific bluefin tuna},   author = {Watal M. Iwasaki},   year = {2023},   note = {R package version 0.7.1.1},   url = {https://github.com/heavywatal/tekkamaki}, }"},{"path":"/index.html","id":"tekkamaki-","dir":"","previous_headings":"","what":"Individual-based simulator of pacific bluefin tuna","title":"Individual-based simulator of pacific bluefin tuna","text":"R interface tekka.","code":""},{"path":"/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"Individual-based simulator of pacific bluefin tuna","text":"Unix-like OS (macOS, Linux, etc.) C++14 compiler (clang++ >= Apple LLVM 8.1, g++ >= 5.3) CMake (>= 3.8.0)","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Individual-based simulator of pacific bluefin tuna","text":"","code":"# install.packages(\"devtools\") devtools::install_github(\"heavywatal/tekkamaki\")"},{"path":"/reference/graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert genealogy to igraph — as_igraph.sample_family","title":"Convert genealogy to igraph — as_igraph.sample_family","text":"Convert genealogy igraph","code":""},{"path":"/reference/graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert genealogy to igraph — as_igraph.sample_family","text":"","code":"# S3 method for sample_family as_igraph(x)"},{"path":"/reference/graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert genealogy to igraph — as_igraph.sample_family","text":"x sample_family table","code":""},{"path":"/reference/graph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert genealogy to igraph — as_igraph.sample_family","text":"as_igraph converts result igraph.","code":""},{"path":"/reference/hsp.html","id":null,"dir":"Reference","previous_headings":"","what":"HSP format — as_hsp","title":"HSP format — as_hsp","text":"HSP format","code":""},{"path":"/reference/hsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HSP format — as_hsp","text":"","code":"as_hsp(.tbl)  write_hsp(x, path = \"hsp.txt\")  read_hsp(path)"},{"path":"/reference/hsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HSP format — as_hsp","text":".tbl sample_family x outcome as_hsp() path file name connection write ","code":""},{"path":"/reference/hsp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"HSP format — as_hsp","text":"as_hsp converts result data frame HSP format. write_hsp writes HSP data frame file.","code":""},{"path":"/reference/kinship.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze kinship with igraph — find_kinship","title":"Analyze kinship with igraph — find_kinship","text":"Analyze kinship igraph","code":""},{"path":"/reference/kinship.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze kinship with igraph — find_kinship","text":"","code":"find_kinship(.tbl, order = 4L, experimental = FALSE)"},{"path":"/reference/kinship.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze kinship with igraph — find_kinship","text":".tbl sample_family order integer experimental boolean","code":""},{"path":"/reference/kinship.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze kinship with igraph — find_kinship","text":"find_kinship finds kinship given order.","code":""},{"path":"/reference/nbinom.html","id":null,"dir":"Reference","previous_headings":"","what":"Test negative_binomial_distribution in tekka simulation — cpp_rnbinom","title":"Test negative_binomial_distribution in tekka simulation — cpp_rnbinom","text":"Test negative_binomial_distribution tekka simulation","code":""},{"path":"/reference/nbinom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test negative_binomial_distribution in tekka simulation — cpp_rnbinom","text":"","code":"cpp_rnbinom(n, size, mu)  plot_nbinom(n = 10000L)"},{"path":"/reference/nbinom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test negative_binomial_distribution in tekka simulation — cpp_rnbinom","text":"n number observations.  length(n) > 1, length     taken number required. size target number successful trials, dispersion     parameter (shape parameter gamma mixing distribution).     Must strictly positive, need integer. mu alternative parametrization via mean: see ‘Details’.","code":""},{"path":"/reference/nbinom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test negative_binomial_distribution in tekka simulation — cpp_rnbinom","text":"cpp_rnbinom generates nbinom random numbers. plot_nbinom draws distributions various parameter sets.","code":""},{"path":[]},{"path":"/reference/parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize parameter json file — plot_parameters_json","title":"Visualize parameter json file — plot_parameters_json","text":"Visualize parameter json file","code":""},{"path":"/reference/parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize parameter json file — plot_parameters_json","text":"","code":"plot_parameters_json(file = \"\")"},{"path":"/reference/parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize parameter json file — plot_parameters_json","text":"file path json file","code":""},{"path":"/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for quick visualization — augment.sample_family","title":"Methods for quick visualization — augment.sample_family","text":"Methods quick visualization","code":""},{"path":"/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for quick visualization — augment.sample_family","text":"","code":"# S3 method for sample_family augment(x, layout = NULL, ...)  # S3 method for genealogy augment(x, layout = NULL, ...)  layout_demography(x)  # S3 method for genealogy plot(x, ..., lwd = 0.5, cex = 5, pch = 16)  # S3 method for sample_family plot(x, ..., lwd = 0.5, cex = 5, pch = 16)"},{"path":"/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for quick visualization — augment.sample_family","text":"x sample_family data.frame. layout data.frame. ... passed layout function. lwd passed ggplot2::geom_segment. cex, pch passed ggplot2::geom_point ggplot2::geom_text.","code":""},{"path":"/reference/pop.html","id":null,"dir":"Reference","previous_headings":"","what":"POP format — as_pop","title":"POP format — as_pop","text":"POP format","code":""},{"path":"/reference/pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"POP format — as_pop","text":"","code":"as_pop(.tbl, min_adult_age = 5L)  write_pop(x, path = \"pop.txt\")  read_pop(path)"},{"path":"/reference/pop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"POP format — as_pop","text":".tbl sample_family min_adult_age integer x outcome as_pop() path file name connection write ","code":""},{"path":"/reference/pop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"POP format — as_pop","text":"as_pop converts result data frame POP format. write_pop writes POP data frame file.","code":""},{"path":"/reference/read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read functions — read_result","title":"Read functions — read_result","text":"Read functions","code":""},{"path":"/reference/read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read functions — read_result","text":"","code":"read_result(file)"},{"path":"/reference/read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read functions — read_result","text":"file Either path file, connection, literal data (either single string raw vector). Files ending .gz, .bz2, .xz, .zip automatically uncompressed. Files starting http://, https://, ftp://, ftps:// automatically downloaded. Remote gz files can also automatically downloaded decompressed. Literal data useful examples tests. recognised literal data, input must either wrapped (), string containing least one new line, vector containing least one string new line. Using value clipboard() read system clipboard.","code":""},{"path":"/reference/read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read functions — read_result","text":"read_result reads result tekka.","code":""},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment igraphlite as_igraph","code":""},{"path":"/reference/snp.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to generate gene genealogy and SNP matrix — make_snp","title":"Functions to generate gene genealogy and SNP matrix — make_snp","text":"Functions generate gene genealogy SNP matrix","code":""},{"path":"/reference/snp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to generate gene genealogy and SNP matrix — make_snp","text":"","code":"make_snp(.tbl, ss = c(2L, 2L))  gather_segments(.tbl)  make_gene_genealogy(segments, segsites = 0L)  count_uncoalesced(genealogy)"},{"path":"/reference/snp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to generate gene genealogy and SNP matrix — make_snp","text":".tbl sample_family data.frame. ss sequence segsites; length number segments; element number segsites segment. segments output gather_segments(). segsites number segregating sites segment. genealogy output make_gene_genealogy().","code":""},{"path":"/reference/snp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions to generate gene genealogy and SNP matrix — make_snp","text":"make_snp() generates SNP matrix. gather_segments() transform individual-based sample_family segment-based table. make_gene_genealogy() generates random gene genealogy. count_uncoalesced() counts uncoalesced lineages gene genealogy","code":""},{"path":"/reference/tekka.html","id":null,"dir":"Reference","previous_headings":"","what":"Run C++ simulation. — cpp_tekka","title":"Run C++ simulation. — cpp_tekka","text":"Run C++ simulation.","code":""},{"path":"/reference/tekka.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run C++ simulation. — cpp_tekka","text":"","code":"cpp_tekka(args)  tekka(args = character(0L))"},{"path":"/reference/tekka.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run C++ simulation. — cpp_tekka","text":"args command line arguments string vector.","code":""},{"path":"/reference/tekka.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run C++ simulation. — cpp_tekka","text":"cpp_tekka Rcpp function call tekka","code":""},{"path":"/reference/tekkamaki-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tekkamaki: Individual-based simulator of pacific bluefin tuna — tekkamaki-package","title":"tekkamaki: Individual-based simulator of pacific bluefin tuna — tekkamaki-package","text":"Individual-based simulator pacific bluefin tuna.","code":""},{"path":[]},{"path":"/reference/tekkamaki-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tekkamaki: Individual-based simulator of pacific bluefin tuna — tekkamaki-package","text":"Maintainer: Watal M. Iwasaki heavywatal@gmail.com (ORCID)","code":""}]
